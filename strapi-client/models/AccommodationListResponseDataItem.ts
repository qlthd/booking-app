/* tslint:disable */
/* eslint-disable */
/**
 * DOCUMENTATION
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact-email@something.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Accommodation } from './Accommodation';
import {
    AccommodationFromJSON,
    AccommodationFromJSONTyped,
    AccommodationToJSON,
} from './Accommodation';

/**
 * 
 * @export
 * @interface AccommodationListResponseDataItem
 */
export interface AccommodationListResponseDataItem {
    /**
     * 
     * @type {number}
     * @memberof AccommodationListResponseDataItem
     */
    id?: number;
    /**
     * 
     * @type {Accommodation}
     * @memberof AccommodationListResponseDataItem
     */
    attributes?: Accommodation;
}

/**
 * Check if a given object implements the AccommodationListResponseDataItem interface.
 */
export function instanceOfAccommodationListResponseDataItem(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AccommodationListResponseDataItemFromJSON(json: any): AccommodationListResponseDataItem {
    return AccommodationListResponseDataItemFromJSONTyped(json, false);
}

export function AccommodationListResponseDataItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccommodationListResponseDataItem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'attributes': !exists(json, 'attributes') ? undefined : AccommodationFromJSON(json['attributes']),
    };
}

export function AccommodationListResponseDataItemToJSON(value?: AccommodationListResponseDataItem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'attributes': AccommodationToJSON(value.attributes),
    };
}

